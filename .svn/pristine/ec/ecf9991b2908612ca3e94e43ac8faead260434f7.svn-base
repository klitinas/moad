<?php
require_once 'HTML/QuickForm/Rule/Regex.php';
class NDB_BVL_Instrument_pdcfrs extends NDB_BVL_Instrument
{
    /**
    * sets up basic data, such as the HTML_Quickform object, and so on.
    *
    * @param string $commentID  the CommentID identifying the data to load
    * @param string $page       if a multipage form, the page to show
    * @return void
    * @access public
    */
    function setup($commentID, $page){
        $this->formType="XIN";
        $this->form = new HTML_Quickform('test_form');
        $this->page = $page;            // page label (number or
        // string - used by
        // user-defined child classes)
        
        // set the object properties
        $this->testName = "pdcfrs";           // test_names.Test_name
        $this->table = 'pdcfrs';              // name of database table corresponding to instrument
        // data keyed by commentID
        $this->commentID = $commentID;
        
        //The array of dates/timestamps to convert to database dates/timestamps
        //Any HTML_Quickform date elements must be listed here
        $this->dateTimeFields=array("Date_taken");
            
        //The array of selects with multiple answers allowed
        //Any HTML_Quickform multiple selects must be listed here
        $this->_selectMultipleElements = array();

        // required fields for data entry completion status
        $this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');

        // setup the form
        $this->_setupForm();

    }
    
    //If the instrument is not paged, remove the switch from the _setupForm method and add all the form Elements in this function.
    
    /**
    * method to build the HTML_Quickform object into a paged form
    *
    * @return void
    * @access private
    */
    function _setupForm(){
        switch($this->page) {
            case "<testvalidate>_page1":
            $this->_page1();
            break;
            
            default:
            $this->_main();
            break;
        }
        //Defines the call back function for HTML Quickform to use when validating the form.
        $this->form->addFormRule(array(&$this,'XINValidate'));
    }
    
    /**
    * generates the main page of the form.
    *
    * @return void
    * @access private
    *
    */
    function _main(){
        // display test name
        $this->addHeader("Parkinson's Disease - Cognitive Functional Rating Scale (PD-CFRS)");
        
        // automatically adds examiner & date of administration
        $this->_addMetadataFields();

		$notes = $this->form->addElement('text', 'notes', 'Notes:', array('size' => 50, 'maxlength' => 100));

		$this->form->addElement('static','hdr','FOR ALL ENTRIES ANSWER 1,2,8, OR NA:');

		$i01 = $this->form->addElement('text', 'i01', '1. Have you had trouble handling your money? For example, counting change or calculating the necessary amount of money for going shopping or for groceries, etc.', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i01', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');
		
		$i02 = $this->form->addElement('text', 'i02', '2. Have you had trouble handling your personal finances? For example, your ank account(s) or checkbook?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i02', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i03 = $this->form->addElement('text', 'i03', '3. Have you had trouble planning holiday activities or meeting with family or friends?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i03', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i04 = $this->form->addElement('text', 'i04', '4. Have you had trouble handling or keeping track of your personal mail, bills, or doctor appointments?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i04', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i05 = $this->form->addElement('text', 'i05', '5. Have you had trouble managing your medications? For example your doses and times you need to take your medications?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i05', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i06 = $this->form->addElement('text', 'i06', "6: Have you had trouble organizing your daily activities?", array('size' => 50, 'maxlength' => 255));
		$this->addRule('i06', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i07 = $this->form->addElement('text', 'i07', '7. Recently, have you had any difficulty understanding how to use electrical appliances in your home?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i07', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i08 = $this->form->addElement('text', 'i08', '8. Have you had trouble knowing how to use public transportation to get to a specific place?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i08', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i09 = $this->form->addElement('text', 'i09', '9. Have you had problems dealing with unplanned events?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i09', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i10 = $this->form->addElement('text', 'i10', '10. Have you had any trouble explaining the things you want to say?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i10', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i11 = $this->form->addElement('text', 'i11', '11. Have you had any trouble understanding the things you read: books, magazines, newspapers?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i11', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');

		$i12 = $this->form->addElement('text', 'i12', '12. Have you had any trouble understanding how to use a cell phone?', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i12', 'Enter 1,2,8,or NA', 'regex', '/(?i)^(na|1|2|8)$/', 'client');


		$total = $this->form->addElement('static','total','Calculated total:');

    }
   
   
}
?>
