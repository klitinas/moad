<?php
require_once 'HTML/QuickForm/Rule/Regex.php';
class NDB_BVL_Instrument_spielberger extends NDB_BVL_Instrument
{
    /**
    * sets up basic data, such as the HTML_Quickform object, and so on.
    *
    * @param string $commentID  the CommentID identifying the data to load
    * @param string $page       if a multipage form, the page to show
    * @return void
    * @access public
    */
    function setup($commentID, $page){
        $this->formType="XIN";
        $this->form = new HTML_Quickform('test_form');
        $this->page = $page;            // page label (number or
        // string - used by
        // user-defined child classes)
        
        // set the object properties
        $this->testName = "spielberger";           // test_names.Test_name
        $this->table = 'spielberger';              // name of database table corresponding to instrument
        // data keyed by commentID
        $this->commentID = $commentID;
        
        //The array of dates/timestamps to convert to database dates/timestamps
        //Any HTML_Quickform date elements must be listed here
        $this->dateTimeFields=array("Date_taken");
            
        //The array of selects with multiple answers allowed
        //Any HTML_Quickform multiple selects must be listed here
        $this->_selectMultipleElements = array();

        // required fields for data entry completion status
        $this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');

        // setup the form
        $this->_setupForm();

    }
    
    //If the instrument is not paged, remove the switch from the _setupForm method and add all the form Elements in this function.
    
    /**
    * method to build the HTML_Quickform object into a paged form
    *
    * @return void
    * @access private
    */
    function _setupForm(){
        switch($this->page) {
            case "<testvalidate>_page1":
            $this->_page1();
            break;
            
            default:
            $this->_main();
            break;
        }
        //Defines the call back function for HTML Quickform to use when validating the form.
        $this->form->addFormRule(array(&$this,'XINValidate'));
    }
    
    /**
    * generates the main page of the form.
    *
    * @return void
    * @access private
    *
    */
    function _main(){
        // display test name
        $this->addHeader("Spielberger");
        
        // automatically adds examiner & date of administration
        $this->_addMetadataFields();

		$this->addHeader("<MY TITLE>");		

		$notes = $this->form->addElement('text', 'notes', 'Notes:', array('size' => 50, 'maxlength' => 100));

		$this->form->addElement('static','hdr','FOR ALL ENTRIES ANSWER 1,2,3,4 OR NA:');

		$i21 = $this->form->addElement('text', 'i21', '21. I feel pleasant:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i21', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');
		
		$i22 = $this->form->addElement('text', 'i22', '22. I feel nervous and restless:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i22', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i23 = $this->form->addElement('text', 'i23', '23. I feel satisfied with myself:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i23', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i24 = $this->form->addElement('text', 'i24', '24. I wish I could be as happy as others seem:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i24', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i25 = $this->form->addElement('text', 'i25', '25. I feel like a failure:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i25', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i26 = $this->form->addElement('text', 'i26', '26. I feel rested:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i26', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i27 = $this->form->addElement('text', 'i27', '27. I am "calm, cool, and collected:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i27', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i28 = $this->form->addElement('text', 'i28', '28. I feel that difficulties are piling up:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i28', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i29 = $this->form->addElement('text', 'i29', '29. I worry too much over something that does not matter:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i29', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i30 = $this->form->addElement('text', 'i30', '30. I am happy:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i30', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i31 = $this->form->addElement('text', 'i31', '31. I have disturbing thoughts:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i31', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');
		
		$i32 = $this->form->addElement('text', 'i32', '32. I lack self-confidence:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i32', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i33 = $this->form->addElement('text', 'i33', '33. I feel secure:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i33', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i34 = $this->form->addElement('text', 'i34', '34. I make decisions easily:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i34', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i35 = $this->form->addElement('text', 'i35', '35. I feel inadequate:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i35', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i36 = $this->form->addElement('text', 'i36', '36. I am content:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i36', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i37 = $this->form->addElement('text', 'i37', '37. Some unimportant thought runs through my head and bothers me:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i37', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i38 = $this->form->addElement('text', 'i38', "38. I take disappointments so keenly that I can't put out of mind:", array('size' => 50, 'maxlength' => 255));
		$this->addRule('i38', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i39 = $this->form->addElement('text', 'i39', '39. I am a steady person:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i39', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');

		$i40 = $this->form->addElement('text', 'i40', '40. I get in a state of tension/turmoil as I think over recent concerns/interests:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('i40', 'Enter 1,2,3,4,or NA', 'regex', '/(?i)^(na|1|2|3|4)$/', 'client');


    }
   
   
}
?>
