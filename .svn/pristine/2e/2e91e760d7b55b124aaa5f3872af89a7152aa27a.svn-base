<?php
require_once 'HTML/QuickForm/Rule/Regex.php';
class NDB_BVL_Instrument_pdq extends NDB_BVL_Instrument
{
    /**
    * sets up basic data, such as the HTML_Quickform object, and so on.
    *
    * @param string $commentID  the CommentID identifying the data to load
    * @param string $page       if a multipage form, the page to show
    * @return void
    * @access public
    */

	function additem($name,$text) {

		$lst = range(0,4);
		$vals = array_combine($lst,$lst);
		$opts = array(''=>'-Select an option-') + $vals + array('na'=>'Not applicable');
		
		$element = $this->form->addElement('select', $name, $text,$opts);
		$this->addRule($name,'This field is required','required');
		return $element;
	}

    function setup($commentID, $page){
        $this->formType="XIN";
        $this->form = new HTML_Quickform('test_form');
        $this->page = $page;            // page label (number or
        // string - used by
        // user-defined child classes)
        
        // set the object properties
        $this->testName = "pdq";           // test_names.Test_name
        $this->table = 'pdq';              // name of database table corresponding to instrument
        // data keyed by commentID
        $this->commentID = $commentID;
        
        //The array of dates/timestamps to convert to database dates/timestamps
        //Any HTML_Quickform date elements must be listed here
        $this->dateTimeFields=array("Date_taken");
            
        //The array of selects with multiple answers allowed
        //Any HTML_Quickform multiple selects must be listed here
        $this->_selectMultipleElements = array();

        // required fields for data entry completion status
        $this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');

        // setup the form
        $this->_setupForm();

    }
    
    //If the instrument is not paged, remove the switch from the _setupForm method and add all the form Elements in this function.
    
    /**
    * method to build the HTML_Quickform object into a paged form
    *
    * @return void
    * @access private
    */
    function _setupForm(){
        switch($this->page) {
            case "<testvalidate>_page1":
            $this->_page1();
            break;
            
            default:
            $this->_main();
            break;
        }
        //Defines the call back function for HTML Quickform to use when validating the form.
        $this->form->addFormRule(array(&$this,'XINValidate'));
    }
    
    /**
    * generates the main page of the form.
    *
    * @return void
    * @access private
    *
    */
    function _main(){
        // display test name
        $this->addHeader("PDQ-39 Questionnaire");
        
        // automatically adds examiner & date of administration
        $this->_addMetadataFields();

		$this->addHeader("<MY TITLE>");		

		$notes = $this->form->addElement('textarea', 'notes', 'Notes:', array('size' => 50, 'maxlength' => 100));
		$warnings = $this->form->addElement('static','warnings','Warnings:');
		$this->addHeader("<MY TITLE>");

		$hdr = $this->form->addElement('static','hdr','For all fields enter values 0-4:');
		$this->addHeader("<MY TITLE>");

		$this->additem('i01', '1. Difficulty with leisure :');
		$this->additem('i02', '2. Difficulty looking after home :');
		$this->additem('i03', '3. Difficulty with bags/shopping :');
		$this->additem('i04', '4. Problems walking 0.5mi :');
		$this->additem('i05', '5. Problems walking 100yds :');
		$this->additem('i06', '6. Problems getting around house :');
		$this->additem('i07', '7. Difficulty getting around in public :');
		$this->additem('i08', '8. Needed accompaniment going out :');
		$this->additem('i09', '9. Frightened falling in public :');
		$this->additem('i10', '10. Confined to house :');
		$this->additem('i11', '11. Difficulty washing :');
		$this->additem('i12', '12. Difficulty dressing :');
		$this->additem('i13', '13. Problems with shoe laces :');
		$this->additem('i14', '14. Problems writing clearly :');
		$this->additem('i15', '15. Difficulty cutting food :');
		$this->additem('i16', '16. Difficulty holding drink :');
		$this->additem('i17', '17. Depressed :');
		$this->additem('i18', '18. Isolated/Lonely :');
		$this->additem('i19', '19. Weepy/Tearful :');
		$this->additem('i20', '20. Angry/Bitter :');
		$this->additem('i21', '21. Anxious :');
		$this->additem('i22', '22. Worried about future :');
		$this->additem('i23', '23. Felt have to conceal PD :');
		$this->additem('i24', '24. Avoided eating/drinking in public :');
		$this->additem('i25', '25. Embarrassed in public about PD :');
		$this->additem('i26', '26. Worried about reactions :');
		$this->additem('i27', '27. Problems with close personal relationships :');
		$this->additem('i28', '28. Lacked partner/spouse support :');
		$this->additem('i29', '29. Lacked family/friend support :');
		$this->additem('i30', '30. Unexpectedly fallen asleep :');
		$this->additem('i31', '31. Problems with concentration :');
		$this->additem('i32', '32. Felt memory bad :');
		$this->additem('i33', '33. Distressing dreams/hallucinations :');
		$this->additem('i34', '34. Difficulty with speech :');
		$this->additem('i35', '35. Felt unable to communicate :');
		$this->additem('i36', '36. Felt ignored :');
		$this->additem('i37', '37. Painful muscle cramps/spasms :');
		$this->additem('i38', '38. Aches/Pains in joints or body :');
		$this->additem('i39', '39. Unpleasantly hot or cold :');

		$this->addHeader("<MY TITLE>");		
		$mobility = $this->form->addElement('static','mobility','Mobility:'); 
		$adl = $this->form->addElement('static','adl','ADL:');
		$emotion = $this->form->addElement('static','emotion','Emotion:');
		$stigma = $this->form->addElement('static','stigma','Stigma:');
		$social_support = $this->form->addElement('static','social_support','Social Support:');
		$cognitions = $this->form->addElement('static','cognitions','Cognitions:');
		$communication = $this->form->addElement('static','communication','Communication:');
		$bodily_discomfort = $this->form->addElement('static','bodily_discomfort','Bodily Discomfort:');
		$total = $this->form->addElement('static','total','Total:');        
    }
   
   
}
?>
