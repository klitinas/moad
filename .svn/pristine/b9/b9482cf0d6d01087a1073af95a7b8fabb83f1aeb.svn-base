<?php
require_once 'HTML/QuickForm/Rule/Regex.php';
class NDB_BVL_Instrument_medical extends NDB_BVL_Instrument
{
    /**
    * sets up basic data, such as the HTML_Quickform object, and so on.
    *
    * @param string $commentID  the CommentID identifying the data to load
    * @param string $page       if a multipage form, the page to show
    * @return void
    * @access public
    */
    function setup($commentID, $page){
        $this->formType="XIN";
        $this->form = new HTML_Quickform('test_form');
        $this->page = $page;            // page label (number or
        // string - used by
        // user-defined child classes)
        
        // set the object properties
        $this->testName = "medical";           // test_names.Test_name
        $this->table = 'medical';              // name of database table corresponding to instrument
        // data keyed by commentID
        $this->commentID = $commentID;
        
        //The array of dates/timestamps to convert to database dates/timestamps
        //Any HTML_Quickform date elements must be listed here
        $this->dateTimeFields=array("Date_taken");
            
        //The array of selects with multiple answers allowed
        //Any HTML_Quickform multiple selects must be listed here
        $this->_selectMultipleElements = array();

        // required fields for data entry completion status
        $this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');

        // setup the form
        $this->_setupForm();

    }
    
    //If the instrument is not paged, remove the switch from the _setupForm method and add all the form Elements in this function.
    
    /**
    * method to build the HTML_Quickform object into a paged form
    *
    * @return void
    * @access private
    */
    function _setupForm(){
        switch($this->page) {
            case "<testvalidate>_page1":
            $this->_page1();
            break;
            
            default:
            $this->_main();
            break;
        }
        //Defines the call back function for HTML Quickform to use when validating the form.
        $this->form->addFormRule(array(&$this,'XINValidate'));
    }
    
    /**
    * generates the main page of the form.
    *
    * @return void
    * @access private
    *
    */
    function _main(){
        // display test name
        $this->addHeader("Medical Summary");
        
        // automatically adds examiner & date of administration
        $this->_addMetadataFields();

		//$this->addHeader("<MY TITLE>");		

		$notes = $this->form->addElement('text', 'notes', 'Notes:', array('size' => 50, 'maxlength' => 100));

		// $this->form->addElement('static','hdr','ALL VALUES MUST BE NUMERIC:');

		$meds = $this->form->addElement('text', 'meds', 'Meds:', array('size' => 50, 'maxlength' => 255));
		//$this->addRule('moca', 'Value must be numeric', 'numeric', 'client');
		
		$ldopa = $this->form->addElement('text', 'ldopa', 'L-DOPA (Y/N):', array('size' => 50, 'maxlength' => 255));
		$this->addRule('ldopa', 'Enter Y or N', 'regex', '/(?i)^(na|y|n)$/','client');

		$dopa_a = $this->form->addElement('text', 'dopa_a', 'DOPA-A (Y/N):', array('size' => 50, 'maxlength' => 255));
		$this->addRule('dopa_a', 'Enter Y or N', 'regex', '/(?i)^(na|y|n)$/','client');

		$anti_dep = $this->form->addElement('text', 'anti_dep', 'Antidepressants (Y/N):', array('size' => 50, 'maxlength' => 255));
		$this->addRule('anti_dep', 'Enter Y or N', 'regex', '/(?i)^(na|y|n)$/','client');

		$chol = $this->form->addElement('text', 'chol', 'CHOL (Y/N):', array('size' => 50, 'maxlength' => 255));
		$this->addRule('chol', 'Enter Y or N', 'regex', '/(?i)^(na|y|n)$/','client');

		$av_off_per24hr = $this->form->addElement('text', 'av_off_per24hr', 'Av off / 24 hour:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('av_off_per24hr', 'Value must be numeric', 'numeric', 'client');

		$av_awake_per24 = $this->form->addElement('text', 'av_awake_per24', 'Av awake / 24 hour:', array('size' => 50, 'maxlength' => 255));
		$this->addRule('av_awake_per24', 'Value must be numeric', 'numeric', 'client');

		$w_dys = $this->form->addElement('text', 'w_dys', 'W DYS:', array('size' => 50, 'maxlength' => 255));		

		$w_t_dys = $this->form->addElement('text', 'w_t_dys', 'W T DYS:', array('size' => 50, 'maxlength' => 255));		

		$pct_off = $this->form->addElement('text', 'pct_off', 'pct OFF:', array('size' => 50, 'maxlength' => 255));		

		$pct_dys = $this->form->addElement('text', 'pct_dys', 'pct DYS:', array('size' => 50, 'maxlength' => 255));		

    }
   
   
}
?>
