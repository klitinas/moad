<?php
require_once 'HTML/QuickForm/Rule/Regex.php';
class NDB_BVL_Instrument_aesc extends NDB_BVL_Instrument
{
    /**
    * sets up basic data, such as the HTML_Quickform object, and so on.
    *
    * @param string $commentID  the CommentID identifying the data to load
    * @param string $page       if a multipage form, the page to show
    * @return void
    * @access public
    */

	function additem($name,$text) {

		$opts = array_merge(array(''=>'-Select an option-'),range(1,4));
		$element = $this->form->addElement('select', $name, $text,$opts);
		return $element;
	}

    function setup($commentID, $page){
        $this->formType="XIN";
        $this->form = new HTML_Quickform('test_form');
        $this->page = $page;            // page label (number or
        // string - used by
        // user-defined child classes)
        
        // set the object properties
        $this->testName = "aesc";           // test_names.Test_name
        $this->table = 'aesc';              // name of database table corresponding to instrument
        // data keyed by commentID
        $this->commentID = $commentID;
        
        //The array of dates/timestamps to convert to database dates/timestamps
        //Any HTML_Quickform date elements must be listed here
        $this->dateTimeFields=array("Date_taken");
            
        //The array of selects with multiple answers allowed
        //Any HTML_Quickform multiple selects must be listed here
        $this->_selectMultipleElements = array();

        // required fields for data entry completion status
        //$this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');
		$this->_requiredElements = array('Examiner', '<FIRST QUESTION OF EACH PAGE>');
        // setup the form
        $this->_setupForm();

    }
    
    //If the instrument is not paged, remove the switch from the _setupForm method and add all the form Elements in this function.
    
    /**
    * method to build the HTML_Quickform object into a paged form
    *
    * @return void
    * @access private
    */
    function _setupForm(){
        switch($this->page) {
            case "<testvalidate>_page1":
            $this->_page1();
            break;
            
            default:
            $this->_main();
            break;
        }
        //Defines the call back function for HTML Quickform to use when validating the form.
        $this->form->addFormRule(array(&$this,'XINValidate'));
    }
    
    /**
    * generates the main page of the form.
    *
    * @return void
    * @access private
    *
    */
    function _main(){
        // display test name
        $this->addHeader("AES-C");
        
        // automatically adds examiner & date of administration
        $this->_addMetadataFields();
		$this->addHeader("<MY TITLE>");

		$notes = $this->form->addElement('textarea', 'notes', 'Notes:', array('size' => 50, 'maxlength' => 100));
		$warnings = $this->form->addElement('static','warnings','Warnings:');


		$this->addHeader("<MY TITLE>");		
		$this->form->addElement('static','hdr','FOR ALL ENTRIES ANSWER 1,2,3,4:');

		$this->additem('i01', '1. Interested in things:');	
		$this->additem('i02', '2. Gets things done during the day:');
		$this->additem('i03', '3. Getting thing started on own is important:');
		$this->additem('i04', '4. Interested in having new experiences:');
		$this->additem('i05', '5. Interested in learning new things:');
		$this->additem('i06', '6. Puts little effort into anything:');
		$this->additem('i07', '7. Approaches life with intensity:');
		$this->additem('i08', '8. Seeing a job through to the end is important:');
		$this->additem('i09', '9. Spends time doing things that interest:');
		$this->additem('i10', '10. Someone has to tell her/him what to do each day:');
		$this->additem('i11', '11. Less concerned with problems than should be:');
		$this->additem('i12', '12. Has friends:');
		$this->additem('i13', '13. Getting together with friends is important:');
		$this->additem('i14', '14. When something good happens, gets excited:');
		$this->additem('i15', '15. Has accurate understanding of his/her problems:');
		$this->additem('i16', '16. Getting things done during the day is important:');
		$this->additem('i17', '17. Has initiative:');
		$this->additem('i18', '18. Has motivation:');

		$total = $this->form->addElement('static','total','Calculated total:'); 
    }
   
   
}
?>
