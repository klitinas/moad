#!/usr/bin/php
<?php
/**
* BMI Scoring
*
* PHP version 5
*
* @category Main
* @package  BMI_Instrument
* @author   Rathi Gnanasekaran <sekaranrathi@gmail.com>
* @license  http://www.gnu.org/licenses/gpl-3.0.txt GPLv3
* @link     https://github.com/aces/Loris
*/

function recalc($inVal) {
	switch ($inVal) {
		case 1:
			$calcVal = 4;
			break;
		case 2:
			$calcVal = 3;
			break;
		case 3:
			$calcVal = 2;
			break;
		case 4:
			$calcVal = 1;
			break;
		}
		
		return $calcVal;
		
}		

require_once "../tools/generic_includes.php";
require_once "Database.class.inc";
$CommentID = $argv[1];
$db        =& Database::singleton();
if (Utility::isErrorX($db)) {
        print "Could not connect to database: " . $db->getMessage();
            exit(1);
}
$query         = "SELECT * from spielberger WHERE CommentID = :CommentID";
$WhereCriteria = array('CommentID'=>$CommentID);
$record        = array();
$record        = $db->pselectRow($query, $WhereCriteria);
if (Utility::isErrorX($record)) {
        print "Query has failed to select: ".$record->getMessage();
            exit(2);
}
$scores = array();

$all = array(
$record['i21'],
$record['i22'],
$record['i23'],
$record['i24'],
$record['i25'],
$record['i26'],
$record['i27'],
$record['i28'],
$record['i29'],
$record['i30'],
$record['i31'],
$record['i32'],
$record['i33'],
$record['i34'],
$record['i35'],
$record['i36'],
$record['i37'],
$record['i38'],
$record['i39'],
$record['i40']);

$scores['c21'] = recalc($record['i21']);
$scores['c22'] = $record['i22'];
$scores['c23'] = recalc($record['i23']);
$scores['c24'] = $record['i24'];
$scores['c25'] = $record['i25'];
$scores['c26'] = recalc($record['i26']);
$scores['c27'] = recalc($record['i27']);
$scores['c28'] = $record['i28'];
$scores['c29'] = $record['i29'];
$scores['c30'] = recalc($record['i30']);
$scores['c31'] = $record['i31'];
$scores['c32'] = $record['i32'];
$scores['c33'] = recalc($record['i33']);
$scores['c34'] = recalc($record['i34']);
$scores['c35'] = $record['i35'];
$scores['c36'] = recalc($record['i36']);
$scores['c37'] = $record['i37'];
$scores['c38'] = $record['i38'];
$scores['c39'] = recalc($record['i39']);
$scores['c40'] = $record['i40'];

$total = 
$scores['c21'] +
$scores['c22'] +
$scores['c23'] +
$scores['c24'] +
$scores['c25'] +
$scores['c26'] +
$scores['c27'] +
$scores['c28'] +
$scores['c29'] +
$scores['c30'] +
$scores['c31'] +
$scores['c32'] +
$scores['c33'] +
$scores['c34'] +
$scores['c35'] +
$scores['c36'] +
$scores['c37'] +
$scores['c38'] +
$scores['c39'] +
$scores['c40'];

if(empty($total)) {
    $scores['total']          = 'Unable to calculate';

} else {
    $scores['total']          = round($total, 2);

}

// TO DO: why won't notes give instant UI feedback when changed on instrument page??
if ((array_search('', $all)!==false) or (array_search('na', array_map('strtolower',$all))!==false)) {
	if (strpos($record['notes'], " AUTOMATED MESSAGE: some field(s) not entered") === FALSE) {
		$scores['notes'] = $record['notes'] . " AUTOMATED MESSAGE: some field(s) not entered";	
	} 
	$scores['total'] = NULL;
} else {
	$scores['notes'] = str_replace("AUTOMATED MESSAGE: some field(s) not entered"," ",$scores['notes']);
}


//save scores
$result = $db->update('spielberger', $scores, $WhereCriteria);
if ($db->isError($result)) {
    print "Could not save total score: ". $result->getMessage();
    exit(3);
}

exit(0);

?>
